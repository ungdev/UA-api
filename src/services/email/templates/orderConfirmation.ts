import { DetailedCart, ItemCategory } from '../../../types';
import { serialize } from '..';
import { formatPrice } from '../../../utils/helpers';

export const generateOrderConfirmationEmail = (cart: DetailedCart) =>
  serialize({
    title: {
      topic: 'Confirmation de commande',
      banner: 'Informations importantes',
      short: `Salut ${cart.user.firstname},`,
      highlight: "Bienvenue √† l'UTT Arena&nbsp;üî•&nbsp;!",
    },
    reason:
      "Tu as re√ßu cet email car tu es inscrit √† l'UTT Arena 2024. Si ce n'est pas le cas, contacte-nous et change le mot de passe de ta bo√Æte mail.",
    receiver: cart.user.email,
    sections: [
      {
        title: 'Confirmation de commande',
        components: [
          'On te confirme ta commande',
          {
            name: 'Tickets',
            items: [
              {
                name: '*Nom*',
                type: '*Type*',
                price: '*Prix*',
              },
              ...cart.cartItems
                .filter((cartItem) => cartItem.item.category === ItemCategory.ticket)
                .map((ticket) => ({
                  name: `${ticket.forUser.firstname} ${ticket.forUser.lastname}`,
                  type: ticket.item.name,
                  price: formatPrice(ticket.reducedPrice ?? ticket.price),
                })),
            ],
          },
          {
            name: 'Suppl√©ments',
            items: [
              {
                name: '*Nom*',
                amount: '*Quantit√©*',
                price: '*Prix*',
              },
              ...cart.cartItems
                .filter((cartItem) => cartItem.item.category === ItemCategory.supplement)
                .map((item) => ({
                  name: item.item.name,
                  amount: `${item.quantity}`,
                  price: formatPrice(item.reducedPrice ?? item.price),
                })),
            ],
          },
          {
            name: 'Location de mat√©riel',
            items: [
              {
                name: '*Nom*',
                amount: '*Quantit√©*',
                price: '*Prix*',
              },
              ...cart.cartItems
                .filter((cartItem) => cartItem.item.category === ItemCategory.rent)
                .map((item) => ({
                  name: item.item.name,
                  amount: `${item.quantity}`,
                  price: formatPrice(item.reducedPrice ?? item.price),
                })),
            ],
          },
        ],
      },
      {
        title: 'Tournoi',
        components: [
          'Voil√† les derni√®res informations importantes n√©cessaires au bon d√©roulement de la comp√©tition&nbsp;:',
          [
            'Il est n√©cessaire que *tous les joueurs* de *toutes les √©quipes* soient pr√©sents sur notre Discord',
            'Tous les tournois d√©butent samedi √† 10h, il faudra donc √™tre pr√©sent *√† partir de 9h00* pour un check-in de toutes les √©quipes et joueurs',
            "N'h√©site pas √† contacter un membre du staff sur Discord si tu as une question ou que tu rencontres un quelconque probl√®me üòâ",
          ],
          {
            name: 'Rejoindre le serveur Discord',
            location: 'https://discord.gg/WhxZwKU',
          },
        ],
      },
      {
        title: 'Billet',
        components: ["Tu recevras ton *billet personnalis√©* par mail quelques jours avant l'UTT Arena&nbsp;!"],
      },
    ],
    attachments: [],
  });
