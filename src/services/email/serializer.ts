import { User, ItemCategory } from '@prisma/client';
import { readFile } from 'fs/promises';
import { render } from 'mustache';
import { ActionFeedback, DetailedCart } from '../../types';
import { escapeText, inflate, style } from './components';
import env from '../../utils/env';
import { formatPrice } from '../../utils/helpers';
import type { Mail, SerializedMail, Component } from '.';

/**
 * Applied {@link Mail} content in the template
 * @throws an error when an unknwon component is in the {@link Mail#sections#components}
 */
export const serialize = async (content: Mail) => {
  const template = await readFile('assets/email/template.html', 'utf8');
  const year = new Date().getFullYear();
  return <SerializedMail>{
    to: content.receiver,
    subject: `${content.title.topic} - UTT Arena ${year}`,
    html: render(
      template,
      {
        ...content,
        year,
        style,
      },
      undefined,
      {
        escape: (text: Component[] | string): string =>
          // These are the elements mustache tries to write in the mail. They can be
          // full text or the list of components (cf. assets/email/template.html)
          // We escape text and handle components
          typeof text === 'string' ? escapeText(text) : text.map(inflate).join(''),
      },
    ),
  };
};

export const generateTicketsEmail = (cart: DetailedCart) =>
  serialize({
    title: {
      topic: 'Bienvenue',
      banner: 'Informations importantes',
      short: `Salut ${cart.user.firstname},`,
      highlight: "Bienvenue √† l'UTT Arena&nbsp;üî•&nbsp;!",
    },
    reason:
      "Tu as re√ßu cet email car tu es inscrit √† l'UTT Arena 2021. Si ce n'est pas le cas, contacte-nous et change le mot de passe de ta bo√Æte mail.",
    receiver: cart.user.email,
    sections: [
      {
        title: 'Tournoi',
        components: [
          'Voil√† les derni√®res informations importantes n√©cessaires au bon d√©roulement de la comp√©tition&nbsp;:',
          [
            'Il est n√©cessaire que *tous les joueurs* de *toutes les √©quipes* soient pr√©sents sur notre Discord',
            'Tous les tournois d√©butent samedi √† 10h, il faudra donc √™tre pr√©sent *√† partir de 9h30* pour un check-in de toutes les √©quipes et joueurs',
            "N'h√©site pas √† contacter un membre du staff sur Discord si tu as une question ou que tu rencontres un quelconque probl√®me üòâ",
          ],
          {
            name: 'Rejoindre le serveur Discord',
            location: 'https://discord.gg/WhxZwKU',
          },
        ],
      },
      {
        title: 'Billet',
        components: ["Tu re√ßevras ton *billet personnalis√©* par mail quelques jours avant l'UTT Arena&nbsp;!"],
      },
      {
        title: 'Confirmation de commande',
        components: [
          'On te confirme aussi ta commande',
          {
            name: 'Tickets',
            items: [
              {
                name: '*Nom*',
                type: '*Type*',
                price: '*Prix*',
              },
              ...cart.cartItems
                .filter((cartItem) => cartItem.item.category === ItemCategory.ticket)
                .map((ticket) => ({
                  name: `${ticket.forUser.firstname} ${ticket.forUser.lastname}`,
                  type: ticket.item.name,
                  price: formatPrice(ticket.item.price),
                })),
            ],
          },
          {
            name: 'Suppl√©ments',
            items: [
              {
                name: '*Nom*',
                amount: '*Quantit√©*',
                price: '*Prix*',
              },
              ...cart.cartItems
                .filter((cartItem) => cartItem.item.category === ItemCategory.supplement)
                .map((item) => ({
                  name: item.item.name,
                  amount: `${item.quantity}`,
                  price: formatPrice(item.item.price),
                })),
            ],
          },
        ],
      },
    ],
  });

export const generateValidationEmail = (user: User) =>
  serialize({
    receiver: user.email,
    reason:
      "Tu as re√ßu ce mail car tu as envoy√© une demande de cr√©ation de compte √† l'UTT Arena. Si ce n'est pas toi, ignore ce message ou contacte nous.",
    title: {
      topic: 'Code de validation',
      banner: 'Cr√©ation du compte',
      short: `Salut ${user.firstname},`,
      highlight: "Bienvenue √† l'UTT Arena&nbsp;!",
    },
    sections: [
      {
        title: 'Avant de commencer...',
        components: [
          "On sait bien que c'est p√©nible mais on doit v√©rifier que ton adresse email fonctionne bien (sinon tu ne pourras pas recevoir tes billets&nbsp;!).",
          {
            name: 'Confirme ton adresse email',
            location: `${env.front.website}/?action=${ActionFeedback.VALIDATE}&state=${user.registerToken}`,
          },
        ],
      },
      {
        title: 'Discord',
        components: [
          "On utilise Discord pendant l'√©v√®nement, et tu auras besoin de lier ton compte discord avec ton compte UTT Arena pour pouvoir cr√©er ou rejoindre une √©quipe. On te donnera plus de d√©tails l√†-dessus √† ce moment-l√† üòâ",
        ],
      },
      {
        title: 'Tournoi Super Smash Bros Ultimate',
        components: [
          "Si tu as choisi de t'inscrire √† ce tournoi et que tu choisis de venir avec ta propre console, tu peux b√©n√©ficier d'une r√©duction sur ton billet üòâ _(offre limit√©e √† un certain nombre de places)_",
        ],
      },
      {
        title: 'Des questions ?',
        components: [
          "On t'invite √† lire la FAQ ou √† poser tes questions directement sur Discord.",
          [
            {
              name: 'FAQ',
              location: `${env.front.website}/faq`,
            },
            {
              name: 'Rejoindre le serveur Discord',
              location: 'https://discord.gg/WhxZwKU',
            },
          ],
        ],
      },
    ],
  });

export const generatePasswordResetEmail = (user: User) =>
  serialize({
    receiver: user.email,
    reason:
      "Tu as re√ßu ce mail car tu as demand√© √† r√©initialiser ton mot de passe. Si ce n'est pas le cas, ignore ce message.",
    title: {
      topic: 'R√©initialisation de ton mot de passe',
      banner: 'R√©initialisation du mot de passe',
      short: `Salut ${user.firstname},`,
      highlight: 'Tu es sur le point de r√©initialiser ton mot de passe',
    },
    sections: [
      {
        title: 'Code de v√©rification',
        components: [
          "On doit s'assurer que tu es bien √† l'origine de cette demande. Tu peux finaliser la proc√©dure en cliquant sur le bouton ci-dessous.",
          {
            name: 'R√©initialise ton mot de passe',
            location: `${env.front.website}/?action=${ActionFeedback.PASSWORD_RESET}&state=${user.resetToken}`,
            color: '#dc143c',
          },
        ],
      },
    ],
  });
